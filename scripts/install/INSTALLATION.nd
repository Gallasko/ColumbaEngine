# ColumbaEngine Installation Guide

This guide provides automated installation scripts for ColumbaEngine with all dependencies and a working test application.

## Quick Start

### Native Desktop Installation

```bash
# Download and run the installer
curl -fsSL https://raw.githubusercontent.com/Gallasko/ColumbaEngine/main/scripts/install/install-ColumbaEngine.sh | bash

# Or download and run with options
wget https://raw.githubusercontent.com/Gallasko/ColumbaEngine/main/scripts/install/install-ColumbaEngine.sh
chmod +x install-ColumbaEngine.sh
./install-ColumbaEngine.sh --help
```

### Web/Emscripten Installation

```bash
# First install the native version, then:
wget https://raw.githubusercontent.com/Gallasko/ColumbaEngine/main/scripts/install/install-emscripten.sh
./install-emscripten.sh
```

## Installation Options

### Native Installation Script (`install-ColumbaEngine.sh`)

**What it does:**
- Installs system dependencies (SDL2, OpenGL, build tools)
- Downloads ColumbaEngine source code
- Builds ColumbaEngine as a static library
- Installs ColumbaEngine system-wide or to custom location
- Creates a working test application
- Tests the installation

**Usage:**
```bash
# Default installation to /usr/local
./install-ColumbaEngine.sh

# Install specific version
./install-ColumbaEngine.sh -v v1.0.0

# Install to custom location (no sudo required)
./install-ColumbaEngine.sh -p ~/.local

# Use different repository
./install-ColumbaEngine.sh -r https://github.com/Gallasko/ColumbaEngine.git

# Custom working directory
./install-ColumbaEngine.sh -d ~/my-ColumbaEngine-install

# Parallel build with specific job count
./install-ColumbaEngine.sh -j 4
```

**Environment Variables:**
```bash
# Set before running the script
export ColumbaEngine_VERSION="v1.0.0"
export INSTALL_PREFIX="$HOME/.local"
export BUILD_JOBS=8
./install-ColumbaEngine.sh
```

### Emscripten Installation Script (`install-emscripten.sh`)

**What it does:**
- Installs Emscripten SDK
- Builds ColumbaEngine for WebAssembly
- Creates web test application
- Sets up shell environment

**Usage:**
```bash
# Use default ColumbaEngine location
./install-emscripten.sh

# Specify ColumbaEngine directory
./install-emscripten.sh /path/to/ColumbaEngine

# Custom Emscripten location
EMSDK_DIR=~/my-emsdk ./install-emscripten.sh
```

## Supported Platforms

### Native Platforms
- **Ubuntu/Debian** - Full automatic dependency installation
- **Fedora/RHEL/CentOS** - Full automatic dependency installation
- **Arch Linux** - Full automatic dependency installation
- **Other Linux** - Manual dependency installation required
- **Windows** - Partial support (dependencies must be installed manually)
- **macOS** - Partial support (use Homebrew for dependencies)

### Web Platform
- **Emscripten** - Full support for WebAssembly builds

## What Gets Installed

### System Dependencies
- Build tools (gcc, g++, make, cmake, git)
- OpenGL development libraries
- X11 development libraries (Linux)
- Audio libraries (ALSA, PulseAudio)
- SDL2 development headers (for reference)

### ColumbaEngine Components
- Static library (`libColumbaEngine.a`)
- All bundled dependencies (SDL2, GLEW, FreeType, etc.)
- Header files
- CMake configuration files

### File Locations
```
/usr/local/lib/libColumbaEngine.a              # Main engine library
/usr/local/lib/lib*.a                     # Bundled dependencies
/usr/local/include/ColumbaEngine/              # Engine headers
/usr/local/lib/cmake/ColumbaEngine/            # CMake config files
```

### Test Application
```
~/ColumbaEngine-install/
├── ColumbaEngine/                   # Engine source code
│   ├── build/                  # Native build
│   └── build-emscripten/       # Web build (if installed)
├── test-app/                   # Native test application
│   ├── src/
│   │   ├── main.cpp
│   │   ├── application.h
│   │   └── application.cpp
│   ├── build/
│   │   └── ColumbaEngineTestApp     # Executable
│   ├── CMakeLists.txt
│   ├── build.sh
│   └── README.md
└── web-test/                   # Web test application (if installed)
    ├── src/
    ├── build-web/
    │   ├── ColumbaEngineWebTest.html
    │   ├── ColumbaEngineWebTest.js
    │   └── ColumbaEngineWebTest.wasm
    ├── CMakeLists.txt
    └── build-web.sh
```

## Using ColumbaEngine in Your Projects

### CMake Integration

```cmake
# In your CMakeLists.txt
cmake_minimum_required(VERSION 3.18)
project(MyGame)

set(CMAKE_CXX_STANDARD 17)

# Find ColumbaEngine
find_package(ColumbaEngine REQUIRED)

# Create your executable
add_executable(MyGame src/main.cpp)

# Link with ColumbaEngine
target_link_libraries(MyGame PRIVATE ColumbaEngine::ColumbaEngine)
```

### Build Your Project

```bash
mkdir build && cd build
cmake ..
make
```

### Cross-Platform Building

**Native:**
```bash
mkdir build && cd build
cmake .. -DCMAKE_BUILD_TYPE=Release
make -j$(nproc)
```

**Web/Emscripten:**
```bash
# Make sure Emscripten is in PATH
source ~/emsdk/emsdk_env.sh

mkdir build-web && cd build-web
emcmake cmake .. -DCMAKE_BUILD_TYPE=Release
emmake make -j$(nproc)

# Serve the web application
python3 -m http.server 8000
# Open http://localhost:8000/MyGame.html
```

## Example Project Structure

```
MyGame/
├── CMakeLists.txt
├── src/
│   ├── main.cpp
│   ├── game.h
│   └── game.cpp
├── assets/          # Game assets
├── build/           # Native build
└── build-web/       # Web build
```

## Troubleshooting

### Common Issues

**CMake can't find ColumbaEngine:**
```bash
# Specify the path explicitly
cmake .. -DColumbaEngine_DIR=/usr/local/lib/cmake/ColumbaEngine
```

**Permission denied during installation:**
```bash
# For system installation, use sudo or install to user directory
./install-ColumbaEngine.sh -p ~/.local
```

**Missing dependencies on unsupported systems:**
- Install build tools manually (gcc, g++, make, cmake, git)
- Install OpenGL development libraries
- Install X11 development libraries (Linux)
- Install audio development libraries

**Web build fails:**
```bash
# Make sure Emscripten is properly sourced
source ~/emsdk/emsdk_env.sh
which emcc  # Should show emcc path
```

**Runtime errors:**
- Check that all required assets are in the correct paths
- For web builds, ensure you're serving files from a web server
- Check console/terminal for error messages

### Getting Help

1. **Check the test application** - If it works, your installation is correct
2. **Verify installation** - Check that files exist in expected locations
3. **Check build logs** - Look for specific error messages
4. **Environment** - Ensure PATH and environment variables are set
5. **Permissions** - Check file permissions and installation directories

### Manual Installation

If the automatic scripts don't work for your system:

```bash
# 1. Install dependencies manually
# 2. Clone ColumbaEngine
git clone --recursive https://github.com/Gallasko/ColumbaEngine.git
cd ColumbaEngine

# 3. Build
mkdir build && cd build
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local
make -j$(nproc)

# 4. Install
sudo make install
```

## Updating ColumbaEngine

To update to a newer version:

```bash
# Re-run the installer with new version
./install-ColumbaEngine.sh -v v1.1.0

# Or manually update
cd ~/ColumbaEngine-install/ColumbaEngine
git fetch origin
git checkout v1.1.0
cd build
make clean
cmake ..
make -j$(nproc)
sudo make install
```

## Uninstalling

To remove ColumbaEngine:

```bash
# Remove installed files
sudo rm -rf /usr/local/lib/libColumbaEngine.a
sudo rm -rf /usr/local/lib/lib*{SDL2,glew,freetype}*.a
sudo rm -rf /usr/local/include/ColumbaEngine
sudo rm -rf /usr/local/lib/cmake/ColumbaEngine

# Remove working directory
rm -rf ~/ColumbaEngine-install

# Update library cache
sudo ldconfig
```

## Contributing

If you improve the installation scripts or find issues:

1. Fork the repository
2. Create a feature branch
3. Test your changes on multiple platforms
4. Submit a pull request

## License

These installation scripts are provided under the same license as ColumbaEngine.