import "nexus"
import "achievement"
import "log"

var button = NexusButton()

button.id = "Test"
button.label = "Test"

button.conditions = [FactChecker("mana", 25, "GreaterEqual")]
button.outcome = [AchievementRewardEvent("gamelog", "message", "Mana threshold reached!")]

registerNexusButton(button)

//
//var gen = createGenerator("gold_gen", "gold", 0, 1, 5)
//
//var button = NexusButton()
//
//button.id = "GoldHarvest"
//button.label = "Harvest [Gold]"
//
//button.conditions = [FactChecker("mana", 25, "GreaterEqual")]
//button.outcome = [AchievementRewardEvent("res_harvest", "id", gen)]
//button.nbClickBeforeArchive = 0
//
//debugLog(gen)
//
//registerNexusButton(button)
//


var button = NexusButton()

button.id = "TouchAltar"
button.label = "Touch Altar"

button.conditions = [FactChecker("altar_touched", false, "Equal"), FactChecker("startTuto", true, "Equal")]
button.outcome =
    [ AchievementRewardEvent("gamelog", "message", "Altar is coming back to life...")
    , AddFact("altar_touched", true)
    , AchievementRewardEvent("one_shot_res", "res", "mana", "value", 2)
    , AchievementRewardEvent("add_res_display", "res", "mana")
    , AchievementRewardEvent("add_generator", "id", "altar", "res", "mana", "prod", 5.0, "storage", 20.0)
    , AddFact("mana_max_value", 20.0) ]

button.description = "A pretty dusty altar..."

registerNexusButton(button)


var button = NexusButton()

button.id = "BasicHarvest"
button.label = "Harvest Altar"

button.conditions = [FactChecker("altar_touched", true, "Equal")]
button.outcome =
    [ AchievementRewardEvent("res_harvest", "id", "altar") ]

button.description = "Harvest the mana stored in the altar"
button.nbClickBeforeArchive = 0

registerNexusButton(button)


var button = NexusButton()

button.id = "TurnOffAltar"
button.label = "Turn Off Altar"

button.conditions = [FactChecker("altar_touched", true, "Equal")]
button.outcome =
    [ AchievementRewardEvent("activate_gen", "id", "altar", "active", false) ]

button.description = "Harvest the mana stored in the altar"
button.nbClickBeforeArchive = 0

registerNexusButton(button)

var button = NexusButton()

button.id = "TurnOnAltar"
button.label = "Turn On Altar"

button.conditions = [FactChecker("altar_touched", true, "Equal")]
button.outcome =
    [ AchievementRewardEvent("activate_gen", "id", "altar", "active", true) ]

button.description = "Harvest the mana stored in the altar"
button.nbClickBeforeArchive = 0

registerNexusButton(button)


var button = NexusButton()

button.id = "PowerOnScrapper"
button.label = "Touch Black Box"

button.conditions = [FactChecker("altar_touched", true, "Equal")]
button.outcome =
    [ AchievementRewardEvent("gamelog", "message", "Black box is turning on! Weird scraps comes out of it...")
    , AddFact("scrapper_on", true)
    , AchievementRewardEvent("add_res_display", "res", "scrap")
    , AchievementRewardEvent("one_shot_res", "res", "scrap", "value", 1)]

button.description = "A weird black box near the altar, it should be useful..."
button.costs = [ ButtonCost("mana", 10) ]

registerNexusButton(button)


var button = NexusButton()

button.id = "BasicReadingTools"
button.label = "Create Reading Tools"

button.conditions = [FactChecker("total_scrap", 1, "GreaterEqual")]
button.outcome =
    [ AchievementRewardEvent("gamelog", "message", "Books around you start to make some sense.")
    , AddFact("basic_reading_tools", true)
    , AchievementRewardEvent("add_res_display", "res", "knowledge") ]

button.description = "A weird black box near the altar, it should be useful..."
button.costs = [ ButtonCost("mana", 10), ButtonCost("scrap", 5) ]

registerNexusButton(button)


var scrapConverter = Converter("scrap_converter")

scrapConverter.input = ["mana"]
scrapConverter.output = ["scrap"]
scrapConverter.cost = [5.0]
scrapConverter.yield = [1.0]

var scrapConverterId = registerConverter(scrapConverter)


var button = NexusButton()

button.id = "ScrapConverter"
button.label = "Convert [Scrap]"

button.conditions = [FactChecker("scrapper_on", true, "Equal")]
button.outcome = [ AchievementRewardEvent("converter_triggered", "id", scrapConverterId) ]

button.description = "Convert Mana to Scrap"
button.costs = [ ButtonCost("mana", 0, "scrap_converter_mana_cost", false) ]
button.nbClickBeforeArchive = 0

registerNexusButton(button)


var button = NexusButton()

button.id = "KnowledgeFocus"
button.label = "Read books"

button.conditions = [FactChecker("basic_reading_tools", true, "Equal")]
button.outcome = [ AchievementRewardEvent("one_shot_res", "res", "knowledge", "value", 0.5) ]

button.description = "Read books to gain some knowledge about this place"
button.nbClickBeforeArchive = 0
button.activable = true
button.activationTime = 500.0

registerNexusButton(button)


var button = NexusButton()

button.id = "LearnRuneCarving"
button.label = "Learn Runes"

button.conditions = [FactChecker("total_knowledge", 1, "GreaterEqual")]
button.outcome =
    [ AddFact("carving_runes_learned", true)
    , AchievementRewardEvent("add_res_display", "res", "rune") ]

button.costs = [ ButtonCost("knowledge", 5) ]

button.description = "Learn how to carve some magical runes"
button.nbClickBeforeArchive = 1

registerNexusButton(button)


var button = NexusButton()

button.id = "CarvingRunes"
button.label = "Carve Rune"

button.conditions = [FactChecker("carving_runes_learned", true, "Equal")]
button.outcome = [ AchievementRewardEvent("one_shot_res", "res", "rune", "value", 1) ]

button.costs = [ ButtonCost("scrap", 3), ButtonCost("mana", 5) ]

button.description = "Take your time to mold and carve some scrap into a magical rune"
button.nbClickBeforeArchive = 0
button.activable = true
button.activationTime = 2000.0

registerNexusButton(button)


var button = NexusButton()

button.id = "UpgradeAltarSpeed"
button.label = "Upgrade Altar"

button.conditions = [FactChecker("carving_runes_learned", true, "Equal")]
button.outcome = [ AchievementReward("res_gen_upgrade", "id", "altar", "upgradeAmount", 1) ]

button.costs = [ ButtonCost("rune", 5), ButtonCost("mana", 20) ]

button.description = "Upgrade Mana generation (+1 mana/sec) and mana storage"
button.nbClickBeforeArchive = 1
button.activable = true
button.activationTime = 2000.0

registerNexusButton(button)


var button = NexusButton()

button.id = "LearnScrollWriting"
button.label = "Learn Scroll"

button.conditions = [FactChecker("total_knowledge", 1, "GreaterEqual")]
button.outcome =
    [ AddFact("writing_scrolls_learned", true)
    , AchievementRewardEvent("add_res_display", "res", "scroll") ]

button.costs = [ ButtonCost("knowledge", 5) ]

button.description = "Learn how to write some magical scroll"
button.nbClickBeforeArchive = 1

registerNexusButton(button)
